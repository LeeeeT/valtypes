[tool.poetry]
name = "valtypes"
version = "3.0.2"
description = "Parsing in Python has never been easier"
authors = ["LeeeeT <leeeet@inbox.ru>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/LeeeeT/valtypes"
repository = "https://github.com/LeeeeT/valtypes"
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet",
]

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.dev-dependencies]
pre-commit = "^2.18.1"
isort = "^5.10.1"
sort-all = "^1.2.0"
black = "^22.3.0"
pyproject-flake8 = "^0.0.1-alpha.4"
mypy = "^0.950"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
Sphinx = "^4.5.0"
sphinx-rtd-theme = "^1.0.0"

[tool.isort]
profile = "black"
line_length = 151

[tool.black]
target-version = ["py310"]
line-length = 151

[tool.flake8]
max-line-length = 151
ignore = "E203, W503"
exclude = ["venv", "dist"]

[tool.mypy]
strict = true
files = ["valtypes", "tests"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov=valtypes --cov-report xml"

[tool.coverage.run]
branch = true
source = ["valtypes"]

[tool.coverage.report]
fail_under = 100
skip_covered = true
exclude_lines = ["^\\s*\\.\\.\\.$", "^\\s*if TYPE_CHECKING:$", "^\\s*pass$"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
