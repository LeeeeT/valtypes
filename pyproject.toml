[tool.poetry]
name = "valtypes"
version = "6.0.1"
description = "Parsing in Python has never been easier"
authors = ["LeeeeT <leeeet@inbox.ru>"]
license = "Unlicense"
readme = "README.md"
homepage = "https://github.com/LeeeeT/valtypes"
repository = "https://github.com/LeeeeT/valtypes"
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: The Unlicense (Unlicense)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet",
    "Typing :: Typed"
]

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.20.0"

[tool.poetry.group.mypy]
optional = true
[tool.poetry.group.mypy.dependencies]
mypy = "^0.990"
pytest = "^7.2.0"

[tool.poetry.group.pyright]
optional = true
[tool.poetry.group.pyright.dependencies]
pyright = "^1.1.279"
pytest = "^7.2.0"

[tool.poetry.group.pyright-verify]
optional = true
[tool.poetry.group.pyright-verify.dependencies]
pyright = "^1.1.279"

[tool.poetry.group.pytest]
optional = true
[tool.poetry.group.pytest.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"

[tool.poetry.group.docs]
optional = true
[tool.poetry.group.docs.dependencies]
mkdocs-material = "^8.5.9"

[tool.isort]
profile = "black"
line_length = 151

[tool.black]
target-version = ["py310"]
line-length = 151

[tool.flake8]
max-line-length = 151
ignore = "E203, W503, F402"

[tool.mypy]
files = ["valtypes", "tests"]
strict = true
strict_equality = false
warn_return_any = false
warn_no_return = false
no_warn_unused_ignores = true

[tool.pyright]
include = ["valtypes", "tests"]
typeCheckingMode = "strict"
reportUnnecessaryTypeIgnoreComment = false
reportImportCycles = false
reportUnknownArgumentType = false
reportUnknownLambdaType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUnnecessaryIsInstance = false

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov=valtypes --cov-report xml"

[tool.coverage.run]
branch = true
source = ["valtypes"]

[tool.coverage.report]
fail_under = 100
skip_covered = true
exclude_lines = ["^\\s*\\.\\.\\.$", "^\\s*if TYPE_CHECKING:$", "^\\s*pass$"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
